//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_id")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: Uuid,
    pub creation_date: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::select_aud::Entity")]
    SelectAud,
    #[sea_orm(has_many = "super::site_stat::Entity")]
    SiteStat,
    #[sea_orm(has_many = "super::start_way::Entity")]
    StartWay,
}

impl Related<super::select_aud::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SelectAud.def()
    }
}

impl Related<super::site_stat::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SiteStat.def()
    }
}

impl Related<super::start_way::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::StartWay.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
